{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"admin-container\"\n};\nconst _hoisted_2 = {\n  class: \"d-flex justify-content-between\"\n};\nconst _hoisted_3 = {\n  class: \"table-responsive\"\n};\nconst _hoisted_4 = {\n  class: \"table colored-header datatable project-list\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = {\n  class: \"table-responsive\"\n};\nconst _hoisted_10 = {\n  class: \"table colored-header datatable booking-list\"\n};\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"h1\", null, \"Vedeshi Khana\", -1)), _createElementVNode(\"button\", {\n    class: \"btn\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.handleLogout())\n  }, \"Logout\")]), _createElementVNode(\"div\", _hoisted_3, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", null, \"Orders Received\", -1)), _createElementVNode(\"table\", _hoisted_4, [_cache[2] || (_cache[2] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Bill Id\"), _createElementVNode(\"th\", null, \"User Id\"), _createElementVNode(\"th\", null, \"Phone\"), _createElementVNode(\"th\", null, \"Address\"), _createElementVNode(\"th\", null, \"When\"), _createElementVNode(\"th\", null, \"Paid\"), _createElementVNode(\"th\", null, \"Total\"), _createElementVNode(\"th\", null, \"Status\"), _createElementVNode(\"th\", null, \"Action\")])], -1)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filterBills.slice().reverse(), b => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: b.bill_id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(b.bill_id), 1), _createElementVNode(\"td\", null, _toDisplayString(b.user_id), 1), _createElementVNode(\"td\", null, _toDisplayString(b.bill_phone), 1), _createElementVNode(\"td\", null, _toDisplayString(b.bill_address), 1), _createElementVNode(\"td\", null, _toDisplayString(b.bill_when), 1), _createElementVNode(\"td\", null, _toDisplayString(b.bill_paid), 1), _createElementVNode(\"td\", null, \"₹\" + _toDisplayString(b.bill_total), 1), _createElementVNode(\"td\", null, _toDisplayString($data.avaiableStatus[b.bill_status]), 1), _createElementVNode(\"td\", null, [b.bill_status < 5 ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      class: \"action-btn\",\n      onClick: $event => $options.nextStatusBtn(b.bill_id)\n    }, _toDisplayString($data.avaiableStatus[b.bill_status + 1]), 9, _hoisted_5)) : _createCommentVNode(\"\", true), b.bill_status == 1 ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      class: \"cancel-btn\",\n      onClick: $event => $options.cancelBtn(b.bill_id)\n    }, \" Cancel \", 8, _hoisted_6)) : b.bill_status == 5 && b.bill_paid == 'false' ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 2,\n      class: \"paid-btn\",\n      onClick: $event => $options.paidBtn(b.bill_id)\n    }, \" Paid \", 8, _hoisted_7)) : b.bill_status == 5 && b.bill_paid == 'true' ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 3,\n      class: \"action-btn\",\n      onClick: $event => $options.nextStatusBtn(b.bill_id)\n    }, _toDisplayString($data.avaiableStatus[b.bill_status + 1]), 9, _hoisted_8)) : _createCommentVNode(\"\", true)])]);\n  }), 128))])])]), _createElementVNode(\"div\", _hoisted_9, [_cache[5] || (_cache[5] = _createElementVNode(\"h1\", null, \"Table Bookings\", -1)), _createElementVNode(\"table\", _hoisted_10, [_cache[4] || (_cache[4] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Booking Id\"), _createElementVNode(\"th\", null, \"User Name\"), _createElementVNode(\"th\", null, \"Phone\"), _createElementVNode(\"th\", null, \"Date\"), _createElementVNode(\"th\", null, \"Time\"), _createElementVNode(\"th\", null, \"Seats\"), _createElementVNode(\"th\", null, \"Status\"), _createElementVNode(\"th\", null, \"Action\")])], -1)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.bookings.slice().reverse(), booking => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: booking.booking_id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(booking.booking_id), 1), _createElementVNode(\"td\", null, _toDisplayString(booking.user_name), 1), _createElementVNode(\"td\", null, _toDisplayString(booking.phone), 1), _createElementVNode(\"td\", null, _toDisplayString(booking.booking_date), 1), _createElementVNode(\"td\", null, _toDisplayString(booking.booking_time), 1), _createElementVNode(\"td\", null, _toDisplayString(booking.seats), 1), _createElementVNode(\"td\", null, _toDisplayString(booking.status), 1), _createElementVNode(\"td\", null, [booking.status === 'Pending' ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      class: \"action-btn\",\n      onClick: $event => $options.confirmBooking(booking.booking_id)\n    }, \" Confirm \", 8, _hoisted_11)) : _createCommentVNode(\"\", true), booking.status === 'Confirmed' ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      class: \"cancel-btn\",\n      onClick: $event => $options.cancelBooking(booking.booking_id)\n    }, \" Cancel \", 8, _hoisted_12)) : _createCommentVNode(\"\", true)])]);\n  }), 128))])])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","$event","$options","handleLogout","_hoisted_3","_hoisted_4","_Fragment","_renderList","filterBills","slice","reverse","b","key","bill_id","_toDisplayString","user_id","bill_phone","bill_address","bill_when","bill_paid","bill_total","$data","avaiableStatus","bill_status","nextStatusBtn","_hoisted_5","_createCommentVNode","cancelBtn","_hoisted_6","paidBtn","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","bookings","booking","booking_id","user_name","phone","booking_date","booking_time","seats","status","confirmBooking","_hoisted_11","cancelBooking","_hoisted_12"],"sources":["C:\\Users\\visha\\Downloads\\Vedeshi Khana college project\\frontend\\src\\admin\\Dashboard.vue"],"sourcesContent":["<template>\n    <div class=\"admin-container\">\n        <div class=\"d-flex justify-content-between\">\n            <h1>Vedeshi Khana</h1>\n            <button class=\"btn\" @click=\"handleLogout()\">Logout</button>\n        </div>\n\n        <!-- Orders Section -->\n        <div class=\"table-responsive\">\n            <h1>Orders Received</h1>\n            <table class=\"table colored-header datatable project-list\">\n                <thead>\n                    <tr>\n                        <th>Bill Id</th>\n                        <th>User Id</th>\n                        <th>Phone</th>\n                        <th>Address</th>\n                        <th>When</th>\n                        <th>Paid</th>\n                        <th>Total</th>\n                        <th>Status</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\"(b) in filterBills.slice().reverse()\" :key=\"b.bill_id\">\n                        <td>{{ b.bill_id }}</td>\n                        <td>{{ b.user_id }}</td>\n                        <td>{{ b.bill_phone }}</td>\n                        <td>{{ b.bill_address }}</td>\n                        <td>{{ b.bill_when }}</td>\n                        <td>{{ b.bill_paid }}</td>\n                        <td>₹{{ b.bill_total }}</td>\n                        <td>{{ avaiableStatus[b.bill_status] }}</td>\n                        <td>\n                            <button v-if=\"b.bill_status < 5\" class=\"action-btn\" @click=\"nextStatusBtn(b.bill_id)\">\n                                {{ avaiableStatus[b.bill_status + 1] }}\n                            </button>\n\n                            <button v-if=\"b.bill_status == 1\" class=\"cancel-btn\" @click=\"cancelBtn(b.bill_id)\">\n                                Cancel\n                            </button>\n\n                            <button v-else-if=\"b.bill_status == 5 && b.bill_paid == 'false'\" class=\"paid-btn\"\n                                @click=\"paidBtn(b.bill_id)\">\n                                Paid\n                            </button>\n\n                            <button v-else-if=\"b.bill_status == 5 && b.bill_paid == 'true'\" class=\"action-btn\"\n                                @click=\"nextStatusBtn(b.bill_id)\">\n                                {{ avaiableStatus[b.bill_status + 1] }}\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        <!-- Table Booking Section -->\n        <div class=\"table-responsive\">\n            <h1>Table Bookings</h1>\n            <table class=\"table colored-header datatable booking-list\">\n                <thead>\n                    <tr>\n                        <th>Booking Id</th>\n                        <th>User Name</th>\n                        <th>Phone</th>\n                        <th>Date</th>\n                        <th>Time</th>\n                        <th>Seats</th>\n                        <th>Status</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\"(booking) in bookings.slice().reverse()\" :key=\"booking.booking_id\">\n                        <td>{{ booking.booking_id }}</td>\n                        <td>{{ booking.user_name }}</td>\n                        <td>{{ booking.phone }}</td>\n                        <td>{{ booking.booking_date }}</td>\n                        <td>{{ booking.booking_time }}</td>\n                        <td>{{ booking.seats }}</td>\n                        <td>{{ booking.status }}</td>\n                        <td>\n                            <button v-if=\"booking.status === 'Pending'\" class=\"action-btn\" @click=\"confirmBooking(booking.booking_id)\">\n                                Confirm\n                            </button>\n\n                            <button v-if=\"booking.status === 'Confirmed'\" class=\"cancel-btn\" @click=\"cancelBooking(booking.booking_id)\">\n                                Cancel\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { mapState, mapMutations } from \"vuex\";\n\nexport default {\n    name: 'Dashboard',\n\n    data() {\n        return {\n            avaiableStatus: [\"cancel\", \"confirmed\", \"preparing\", \"checking\", \"delivering\", \"delivered\", \"completed\"],\n            allBills: [],\n            bookings: [], // New data for table bookings\n            showOrderDetails: false,\n            sendId: undefined,\n            interval: \"\",\n        }\n    },\n\n    mounted: function () {\n        this.getAllBills();\n        this.getBookings(); // Fetch table bookings when the dashboard is mounted\n        if (!this.admin) {\n            this.$router.push(\"/\");\n        }\n        this.autoUpdate();\n    },\n\n    beforeUnmount() {\n        clearInterval(this.interval)\n    },\n\n    computed: {\n        ...mapState([\"allFoods\", \"admin\"]),\n\n        filterBills: function () {\n            return this.allBills.filter((b) => b.bill_status < 6 && b.bill_status > 0);\n        },\n    },\n\n    methods: {\n        ...mapMutations([\"setAdmin\"]),\n\n        async getAllBills() {\n            this.allBills = (await axios.get('/billstatus')).data;\n        },\n\n        async getBookings() {\n            this.bookings = (await axios.get('/tablebookings')).data; // Fetch table bookings from the server\n        },\n\n        sendBillId: function (id) {\n            this.sendId = id\n            this.showOrderDetails = !this.showOrderDetails;\n        },\n\n        closeView: function () {\n            this.showOrderDetails = !this.showOrderDetails;\n        },\n\n        handleLogout: function () {\n            this.setAdmin(\"\");\n        },\n\n        async nextStatusBtn(id) {\n            await axios.put('/billstatus/' + id);\n            this.getAllBills();\n        },\n\n        async paidBtn(id) {\n            await axios.put('/billstatus/paid/' + id);\n            this.getAllBills();\n        },\n\n        async cancelBtn(id) {\n            await axios.put('/billstatus/cancel/' + id);\n            this.getAllBills();\n        },\n\n        async confirmBooking(bookingId) {\n            await axios.put(`/tablebookings/confirm/${bookingId}`);\n            this.getBookings(); // Refresh the bookings after confirmation\n        },\n\n        async cancelBooking(bookingId) {\n            await axios.put(`/tablebookings/cancel/${bookingId}`);\n            this.getBookings(); // Refresh the bookings after cancellation\n        },\n\n        autoUpdate: function () {\n            this.interval = setInterval(function () {\n                this.getAllBills();\n                this.getBookings(); // Auto-refresh table bookings as well\n            }.bind(this), 1000);\n        }\n    },\n}\n</script>\n\n<style scoped>\n.admin-container {\n    background-color: #fff;\n    height: 100vh;\n    padding: 2rem 9%;\n    font-size: 16px;\n}\n\n.project-list>tbody>tr>td {\n    padding: 12px 8px;\n}\n\n.project-list>tbody>tr>td .avatar {\n    width: 22px;\n    border: 1px solid #CCC;\n}\n\n.table-responsive {\n    margin-top: 8vh;\n}\n\n.action-btn,\n.cancel-btn,\n.paid-btn {\n    width: 100px;\n    height: 25px;\n    color: white;\n    text-transform: capitalize;\n}\n\n.action-btn {\n    background-color: #0da9ef;\n    margin-right: 10px;\n}\n\n.cancel-btn,\n.paid-btn {\n    background-color: red;\n}\n\n.action-btn:hover {\n    background-color: #27ae60;\n}\n\n.booking-list>tbody>tr>td {\n    padding: 12px 8px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}