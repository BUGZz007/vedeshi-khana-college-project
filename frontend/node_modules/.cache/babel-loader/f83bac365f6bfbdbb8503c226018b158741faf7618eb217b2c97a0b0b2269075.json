{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport VueBasicAlert from 'vue-basic-alert';\nexport default {\n  name: \"Table\",\n  data() {\n    return {\n      orderObj: {\n        name: \"\",\n        phone: \"\",\n        people: \"\",\n        tables: \"\",\n        card: \"\",\n        when: \"\",\n        note: \"\"\n      },\n      errorObj: {\n        nameErr: [],\n        phoneErr: [],\n        peopleErr: [],\n        tablesErr: [],\n        cardErr: [],\n        whenErr: []\n      }\n    };\n  },\n  methods: {\n    availableTime: function () {\n      var now = new Date();\n      var day = (\"0\" + now.getDate()).slice(-2);\n      var currentMonth = (\"0\" + (now.getMonth() + 1)).slice(-2);\n      var maxMonth = (\"0\" + (now.getMonth() + 3)).slice(-2);\n      var hour = (\"0\" + now.getHours()).slice(-2);\n      var min = (\"0\" + now.getMinutes()).slice(-2);\n      var minRange = now.getFullYear() + \"-\" + currentMonth + \"-\" + day + \"T\" + hour + \":\" + min;\n      var maxRange = now.getFullYear() + \"-\" + maxMonth + \"-\" + day + \"T\" + hour + \":\" + min;\n      document.getElementById(\"oWhen\").setAttribute(\"min\", minRange);\n      document.getElementById(\"oWhen\").setAttribute(\"max\", maxRange);\n    },\n    resetCheckErr: function () {\n      this.errorObj.nameErr = [];\n      this.errorObj.phoneErr = [];\n      this.errorObj.peopleErr = [];\n      this.errorObj.tablesErr = [];\n      this.errorObj.cardErr = [];\n      this.errorObj.whenErr = [];\n    },\n    checkEmptyErr: function () {\n      for (var typeErr in this.errorObj) {\n        if (this.errorObj[typeErr].length != 0) {\n          return false;\n        }\n      }\n      return true;\n    },\n    checkForm: function () {\n      this.resetCheckErr();\n\n      // Name validate\n      if (!this.orderObj.name) {\n        this.errorObj.nameErr.push(\"Entering a name is required\");\n      } else {\n        if (!/^[A-Za-z]+$/.test(this.orderObj.name.replace(/\\s/g, \"\"))) {\n          this.errorObj.nameErr.push('A name can only contain letters');\n        }\n      }\n\n      // Phone validate\n      if (!this.orderObj.phone) {\n        this.errorObj.phoneErr.push('Entering phone number is required');\n      } else {\n        if (!this.orderObj.phone.startsWith('+91')) {\n          this.errorObj.phoneErr.push('Phone numbers must start with +91');\n        }\n\n        // Check if the part after +91 contains exactly 10 digits\n        const digitsOnly = this.orderObj.phone.replace('+91', '');\n        if (!/^[0-9]{10}$/.test(digitsOnly)) {\n          this.errorObj.phoneErr.push('Phone numbers can only contain 10 digits after +91');\n        }\n        if (this.orderObj.phone.length !== 13) {\n          this.errorObj.phoneErr.push('Phone number must be +91 followed by 10 digits');\n        }\n      }\n      if (!this.orderObj.people) {\n        this.errorObj.peopleErr.push(\"Entering number of people is required\");\n      } else {\n        if (parseInt(this.orderObj.people) > 100) {\n          this.errorObj.peopleErr.push(\"Each store can only serve 100 people at a time\");\n        }\n        if (parseInt(this.orderObj.people) < 1) {\n          this.errorObj.peopleErr.push(\"Number of people must be greater than or equal to 1\");\n        }\n      }\n      if (!this.orderObj.tables) {\n        this.errorObj.tablesErr.push(\"Entering number of tables is required\");\n      } else {\n        if (parseInt(this.orderObj.tables) > 50) {\n          this.errorObj.tablesErr.push(\"Each store can only have maximum 50 tables\");\n        }\n        if (parseInt(this.orderObj.tables) < 1) {\n          this.errorObj.tablesErr.push(\"Number of tables must be greater than or equal to 1\");\n        }\n        if (parseInt(this.orderObj.people) < parseInt(this.orderObj.tables)) {\n          this.errorObj.tablesErr.push(\"The number of tables must be less than the number of people\");\n        }\n      }\n      if (this.orderObj.card) {\n        if (!/[0-9]{10}/.test(this.orderObj.card)) {\n          this.errorObj.cardErr.push('Card numbers can only contain numbers');\n        }\n        if (this.orderObj.card.length != 10) {\n          this.errorObj.cardErr.push('Card number must have exactly 10 digits');\n        }\n      }\n      if (!this.orderObj.when) {\n        this.errorObj.whenErr.push(\"Entering when to serve is required\");\n      } else {\n        let minRange = document.getElementById(\"oWhen\").getAttribute(\"min\");\n        let maxRange = document.getElementById(\"oWhen\").getAttribute(\"max\");\n        let dateMin = new Date(minRange);\n        let dateMax = new Date(maxRange);\n        let dateInput = new Date(this.orderObj.when);\n        if (dateInput === \"Invalid Date\") {\n          this.errorObj.whenErr.push(\"Invalid date input\");\n        }\n        if (dateInput.getTime() < dateMin.getTime() || dateInput.getTime() > dateMax.getTime()) {\n          this.errorObj.whenErr.push(\"Available reservation range is from now to next two months\");\n        }\n        if (dateInput.getHours() < 7 || dateInput.getHours() > 22) {\n          this.errorObj.whenErr.push(\"Store open from 7:00 AM to 10:00 PM everyday\");\n        }\n      }\n    },\n    async handleSubmit(e) {\n      this.checkForm();\n      if (!this.checkEmptyErr()) {\n        e.preventDefault();\n      } else {\n        e.preventDefault();\n        let data = {\n          book_name: this.orderObj.name,\n          book_phone: parseInt(this.orderObj.phone),\n          book_people: parseInt(this.orderObj.people),\n          book_tables: parseInt(this.orderObj.tables),\n          user_id: parseInt(this.orderObj.card),\n          book_when: this.orderObj.when,\n          book_note: this.orderObj.note\n        };\n        await axios.post(\"/booking\", data);\n        this.$refs.alert.showAlert('success', 'Thank you! We will call you soon to confirm your order', 'Booking Successfully !');\n        document.getElementById(\"bookTableForm\").reset();\n      }\n    }\n  },\n  components: {\n    VueBasicAlert\n  }\n};","map":{"version":3,"names":["axios","VueBasicAlert","name","data","orderObj","phone","people","tables","card","when","note","errorObj","nameErr","phoneErr","peopleErr","tablesErr","cardErr","whenErr","methods","availableTime","now","Date","day","getDate","slice","currentMonth","getMonth","maxMonth","hour","getHours","min","getMinutes","minRange","getFullYear","maxRange","document","getElementById","setAttribute","resetCheckErr","checkEmptyErr","typeErr","length","checkForm","push","test","replace","startsWith","digitsOnly","parseInt","getAttribute","dateMin","dateMax","dateInput","getTime","handleSubmit","e","preventDefault","book_name","book_phone","book_people","book_tables","user_id","book_when","book_note","post","$refs","alert","showAlert","reset","components"],"sources":["C:\\Users\\visha\\Downloads\\vedeshi khana\\restaurant-ordering-system-master\\frontend\\src\\pages\\Table.vue"],"sourcesContent":["<template>\n    <vue-basic-alert :duration=\"300\" :closeIn=\"2000\" ref=\"alert\" />\n    <section class=\"order-section\">\n\n        <div class=\"heading\">\n            <span>book a table</span>\n            <h3>enjoy your moment</h3>\n        </div>\n\n        <div class=\"icons-container\">\n\n            <div class=\"icons \">\n                <img src=\"../assets/images/icon-1.png\" alt=\"\">\n                <h3>9:00AM to 10:00PM</h3>\n            </div>\n\n            <div class=\"icons\">\n                <img src=\"../assets/images/icon-2.png\" alt=\"\">\n                <h3>+91 7340425065</h3>\n            </div>\n\n            <div class=\"icons\">\n                <img src=\"../assets/images/icon-3.png\" alt=\"\">\n                <h3>No. 15, 4th Block, Jayanagar, Bengaluru, Karnataka 560011, India</h3>\n            </div>\n\n        </div>\n\n        <!-- booking form -->\n        <form id=\"bookTableForm\" @submit=\"handleSubmit\" novalidate autocomplete=\"off\">\n\n            <div class=\"row\">\n                <div class=\"input-box\">\n                    <label for=\"uName\">your name</label>\n                    <input type=\"text\" name=\"uName\" id=\"uName\" v-model=\"orderObj.name\">\n                    <p v-if=\"errorObj.nameErr.length > 0\">{{ errorObj.nameErr[0] }}</p>\n                </div>\n                <div class=\"input-box\">\n                    <label for=\"uPhone\">your phone number</label>\n                    <input type=\"text\" name=\"uPhone\" id=\"uPhone\" v-model=\"orderObj.phone\">\n                    <p v-if=\"errorObj.phoneErr.length > 0\">{{ errorObj.phoneErr[0] }}</p>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"input-box\">\n                    <label for=\"oPeople\">how many people</label>\n                    <input type=\"number\" name=\"oPeople\" id=\"oPeople\" v-model=\"orderObj.people\">\n                    <p v-if=\"errorObj.peopleErr.length > 0\">{{ errorObj.peopleErr[0] }}</p>\n                </div>\n                <div class=\"input-box\">\n                    <label for=\"oTables\">how many tables</label>\n                    <input type=\"number\" name=\"oTables\" id=\"oTables\" v-model=\"orderObj.tables\">\n                    <p v-if=\"errorObj.tablesErr.length > 0\">{{ errorObj.tablesErr[0] }}</p>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"input-box\">\n                    <label for=\"uCard\">your membership card</label>\n                    <input type=\"text\" name=\"uCard\" id=\"uCard\" v-model=\"orderObj.card\">\n                    <p v-if=\"errorObj.cardErr.length > 0\">{{ errorObj.cardErr[0] }}</p>\n                </div>\n                <div class=\"input-box\">\n                    <label for=\"oWhen\">when</label>\n                    <input type=\"datetime-local\" name=\"oWhen\" id=\"oWhen\" v-model=\"orderObj.when\"\n                        @click=\"availableTime()\">\n                    <p v-if=\"errorObj.whenErr.length > 0\">{{ errorObj.whenErr[0] }}</p>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"input-box\">\n                    <label for=\"uMessage\">note</label>\n                    <textarea placeholder=\"your message, do you want to decorate your table?\" name=\"uMessage\"\n                        id=\"uMessage\" cols=\"30\" rows=\"10\" v-model=\"orderObj.note\"></textarea>\n                </div>\n                <div class=\"input-box\">\n                    <iframe class=\"map\"\n                        src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3890.947785014526!2d77.58052681482155!3d12.930391019180103!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3bae15b5e078c2c5%3A0xe70121dd8a7e78ea!2sJayanagar%204th%20Block%2C%20Bengaluru%2C%20Karnataka%20560011%2C%20India!5e0!3m2!1sen!2sin!4v1715231415790!5m2!1sen!2sin\"\n                        loading=\"lazy\"></iframe>\n                </div>\n            </div>\n\n            <input type=\"submit\" value=\"Book Now\" class=\"btn\">\n        </form>\n\n    </section>\n</template>\n\n<script>\nimport axios from 'axios';\nimport VueBasicAlert from 'vue-basic-alert'\nexport default {\n    name: \"Table\",\n\n    data() {\n        return {\n            orderObj: { name: \"\", phone: \"\", people: \"\", tables: \"\", card: \"\", when: \"\", note: \"\" },\n            errorObj: { nameErr: [], phoneErr: [], peopleErr: [], tablesErr: [], cardErr: [], whenErr: [] },\n        }\n    },\n\n    methods: {\n        availableTime: function () {\n            var now = new Date();\n            var day = (\"0\" + now.getDate()).slice(-2);\n            var currentMonth = (\"0\" + (now.getMonth() + 1)).slice(-2);\n            var maxMonth = (\"0\" + (now.getMonth() + 3)).slice(-2);\n            var hour = (\"0\" + (now.getHours())).slice(-2);\n            var min = (\"0\" + (now.getMinutes())).slice(-2);\n            var minRange = now.getFullYear() + \"-\" + currentMonth + \"-\" + day + \"T\" + hour + \":\" + min;\n            var maxRange = now.getFullYear() + \"-\" + maxMonth + \"-\" + day + \"T\" + hour + \":\" + min;\n\n            document.getElementById(\"oWhen\").setAttribute(\"min\", minRange);\n            document.getElementById(\"oWhen\").setAttribute(\"max\", maxRange);\n        },\n\n        resetCheckErr: function () {\n            this.errorObj.nameErr = [];\n            this.errorObj.phoneErr = [];\n            this.errorObj.peopleErr = [];\n            this.errorObj.tablesErr = [];\n            this.errorObj.cardErr = [];\n            this.errorObj.whenErr = [];\n        },\n\n        checkEmptyErr: function () {\n            for (var typeErr in this.errorObj) {\n                if (this.errorObj[typeErr].length != 0) {\n                    return false;\n                }\n            }\n            return true;\n        },\n\n\n\n        checkForm: function () {\n            this.resetCheckErr();\n\n            // Name validate\n            if (!this.orderObj.name) {\n                this.errorObj.nameErr.push(\"Entering a name is required\");\n            }\n            else {\n                if (!/^[A-Za-z]+$/.test(this.orderObj.name.replace(/\\s/g, \"\"))) {\n                    this.errorObj.nameErr.push('A name can only contain letters');\n                }\n            }\n\n            // Phone validate\n            if (!this.orderObj.phone) {\n                this.errorObj.phoneErr.push('Entering phone number is required');\n            } else {\n                if (!this.orderObj.phone.startsWith('+91')) {\n                    this.errorObj.phoneErr.push('Phone numbers must start with +91');\n                }\n\n                // Check if the part after +91 contains exactly 10 digits\n                const digitsOnly = this.orderObj.phone.replace('+91', '');\n                if (!/^[0-9]{10}$/.test(digitsOnly)) {\n                    this.errorObj.phoneErr.push('Phone numbers can only contain 10 digits after +91');\n                }\n\n                if (this.orderObj.phone.length !== 13) {\n                    this.errorObj.phoneErr.push('Phone number must be +91 followed by 10 digits');\n                }\n            }\n\n            if (!this.orderObj.people) {\n                this.errorObj.peopleErr.push(\"Entering number of people is required\");\n            }\n            else {\n                if (parseInt(this.orderObj.people) > 100) {\n                    this.errorObj.peopleErr.push(\"Each store can only serve 100 people at a time\");\n                }\n\n                if (parseInt(this.orderObj.people) < 1) {\n                    this.errorObj.peopleErr.push(\"Number of people must be greater than or equal to 1\");\n                }\n            }\n\n            if (!this.orderObj.tables) {\n                this.errorObj.tablesErr.push(\"Entering number of tables is required\");\n            }\n            else {\n                if (parseInt(this.orderObj.tables) > 50) {\n                    this.errorObj.tablesErr.push(\"Each store can only have maximum 50 tables\");\n                }\n\n                if (parseInt(this.orderObj.tables) < 1) {\n                    this.errorObj.tablesErr.push(\"Number of tables must be greater than or equal to 1\");\n                }\n\n                if (parseInt(this.orderObj.people) < parseInt(this.orderObj.tables)) {\n                    this.errorObj.tablesErr.push(\"The number of tables must be less than the number of people\");\n                }\n            }\n\n            if (this.orderObj.card) {\n                if (!/[0-9]{10}/.test(this.orderObj.card)) {\n                    this.errorObj.cardErr.push('Card numbers can only contain numbers');\n                }\n\n                if (this.orderObj.card.length != 10) {\n                    this.errorObj.cardErr.push('Card number must have exactly 10 digits');\n                }\n            }\n\n            if (!this.orderObj.when) {\n                this.errorObj.whenErr.push(\"Entering when to serve is required\");\n            }\n            else {\n                let minRange = document.getElementById(\"oWhen\").getAttribute(\"min\");\n                let maxRange = document.getElementById(\"oWhen\").getAttribute(\"max\");\n                let dateMin = new Date(minRange);\n                let dateMax = new Date(maxRange);\n                let dateInput = new Date(this.orderObj.when);\n\n                if (dateInput === \"Invalid Date\") {\n                    this.errorObj.whenErr.push(\"Invalid date input\");\n                }\n\n                if (dateInput.getTime() < dateMin.getTime() || dateInput.getTime() > dateMax.getTime()) {\n                    this.errorObj.whenErr.push(\"Available reservation range is from now to next two months\");\n                }\n\n                if (dateInput.getHours() < 7 || dateInput.getHours() > 22) {\n                    this.errorObj.whenErr.push(\"Store open from 7:00 AM to 10:00 PM everyday\");\n                }\n            }\n\n\n        },\n\n        async handleSubmit(e) {\n            this.checkForm();\n\n            if (!this.checkEmptyErr()) {\n                e.preventDefault();\n            } else {\n                e.preventDefault();\n\n                let data = {\n                    book_name: this.orderObj.name,\n                    book_phone: parseInt(this.orderObj.phone),\n                    book_people: parseInt(this.orderObj.people),\n                    book_tables: parseInt(this.orderObj.tables),\n                    user_id: parseInt(this.orderObj.card),\n                    book_when: this.orderObj.when,\n                    book_note: this.orderObj.note,\n                }\n\n                await axios.post(\"/booking\", data);\n\n                this.$refs.alert.showAlert('success', 'Thank you! We will call you soon to confirm your order', 'Booking Successfully !')\n                document.getElementById(\"bookTableForm\").reset();\n            }\n        }\n    },\n\n    components: {\n        VueBasicAlert\n    }\n\n}\n</script>\n\n<style scoped>\n.order-section {\n    padding: 2rem 9%;\n}\n\n.order-section .icons-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(40rem, 1fr));\n    gap: 1.5rem;\n    margin-bottom: 2rem;\n}\n\n.order-section .icons-container .icons {\n    border-radius: .5rem;\n    padding: 2rem;\n    text-align: center;\n    background: #f7f7f7;\n}\n\n.order-section .icons-container .icons img {\n    height: 10rem;\n}\n\n.order-section .icons-container .icons h3 {\n    font-size: 2rem;\n    color: #130f40;\n    margin-top: .5rem;\n}\n\n.order-section form {\n    background: #f7f7f7;\n    padding: 2rem;\n    border-radius: .5rem;\n}\n\n.order-section form .row {\n    justify-content: space-between;\n}\n\n.order-section form .row .input-box {\n    width: 49%;\n    padding: 1.8rem 0;\n}\n\n.order-section form .row label {\n    font-size: 1.7rem;\n    color: #666;\n}\n\n.order-section form .row p {\n    font-size: 1.5rem;\n    position: absolute;\n    color: rgb(243, 47, 47);\n    margin: 0;\n    padding-top: 5px;\n}\n\n.order-section form .row input,\n.order-section form .row textarea {\n    width: 100%;\n    margin-top: .5rem;\n    padding: 1rem 1.2rem;\n    width: 100%;\n    border-radius: .5rem;\n    font-size: 1.6rem;\n    text-transform: none;\n    color: #130f40;\n}\n\n.order-section form .row textarea {\n    height: 20rem;\n    resize: none;\n}\n\n.order-section form .row .map {\n    height: 100%;\n    width: 100%;\n    border-radius: .5rem;\n}\n\n@media (max-width: 768px) {\n    .order form .row .input-box {\n        width: 100%;\n    }\n\n    .order-section form .row {\n        display: block;\n        max-width: 100%;\n        width: 100%;\n        margin: 0;\n    }\n\n    .order-section form .row .input-box {\n        width: 100%;\n    }\n\n}\n\n@media (max-width: 576px) {\n    .order-section .icons-container {\n        grid-template-columns: repeat(auto-fit, minmax(30rem, 1fr));\n    }\n}\n</style>"],"mappings":";AA2FA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,aAAY,MAAO,iBAAgB;AAC1C,eAAe;EACXC,IAAI,EAAE,OAAO;EAEbC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE;QAAEF,IAAI,EAAE,EAAE;QAAEG,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAC;MACvFC,QAAQ,EAAE;QAAEC,OAAO,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,SAAS,EAAE,EAAE;QAAEC,SAAS,EAAE,EAAE;QAAEC,OAAO,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAG;IAClG;EACJ,CAAC;EAEDC,OAAO,EAAE;IACLC,aAAa,EAAE,SAAAA,CAAA,EAAY;MACvB,IAAIC,GAAE,GAAI,IAAIC,IAAI,CAAC,CAAC;MACpB,IAAIC,GAAE,GAAI,CAAC,GAAE,GAAIF,GAAG,CAACG,OAAO,CAAC,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;MACzC,IAAIC,YAAW,GAAI,CAAC,GAAE,IAAKL,GAAG,CAACM,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAEF,KAAK,CAAC,CAAC,CAAC,CAAC;MACzD,IAAIG,QAAO,GAAI,CAAC,GAAE,IAAKP,GAAG,CAACM,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAEF,KAAK,CAAC,CAAC,CAAC,CAAC;MACrD,IAAII,IAAG,GAAI,CAAC,GAAE,GAAKR,GAAG,CAACS,QAAQ,CAAC,CAAE,EAAEL,KAAK,CAAC,CAAC,CAAC,CAAC;MAC7C,IAAIM,GAAE,GAAI,CAAC,GAAE,GAAKV,GAAG,CAACW,UAAU,CAAC,CAAE,EAAEP,KAAK,CAAC,CAAC,CAAC,CAAC;MAC9C,IAAIQ,QAAO,GAAIZ,GAAG,CAACa,WAAW,CAAC,IAAI,GAAE,GAAIR,YAAW,GAAI,GAAE,GAAIH,GAAE,GAAI,GAAE,GAAIM,IAAG,GAAI,GAAE,GAAIE,GAAG;MAC1F,IAAII,QAAO,GAAId,GAAG,CAACa,WAAW,CAAC,IAAI,GAAE,GAAIN,QAAO,GAAI,GAAE,GAAIL,GAAE,GAAI,GAAE,GAAIM,IAAG,GAAI,GAAE,GAAIE,GAAG;MAEtFK,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,YAAY,CAAC,KAAK,EAAEL,QAAQ,CAAC;MAC9DG,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,YAAY,CAAC,KAAK,EAAEH,QAAQ,CAAC;IAClE,CAAC;IAEDI,aAAa,EAAE,SAAAA,CAAA,EAAY;MACvB,IAAI,CAAC3B,QAAQ,CAACC,OAAM,GAAI,EAAE;MAC1B,IAAI,CAACD,QAAQ,CAACE,QAAO,GAAI,EAAE;MAC3B,IAAI,CAACF,QAAQ,CAACG,SAAQ,GAAI,EAAE;MAC5B,IAAI,CAACH,QAAQ,CAACI,SAAQ,GAAI,EAAE;MAC5B,IAAI,CAACJ,QAAQ,CAACK,OAAM,GAAI,EAAE;MAC1B,IAAI,CAACL,QAAQ,CAACM,OAAM,GAAI,EAAE;IAC9B,CAAC;IAEDsB,aAAa,EAAE,SAAAA,CAAA,EAAY;MACvB,KAAK,IAAIC,OAAM,IAAK,IAAI,CAAC7B,QAAQ,EAAE;QAC/B,IAAI,IAAI,CAACA,QAAQ,CAAC6B,OAAO,CAAC,CAACC,MAAK,IAAK,CAAC,EAAE;UACpC,OAAO,KAAK;QAChB;MACJ;MACA,OAAO,IAAI;IACf,CAAC;IAIDC,SAAS,EAAE,SAAAA,CAAA,EAAY;MACnB,IAAI,CAACJ,aAAa,CAAC,CAAC;;MAEpB;MACA,IAAI,CAAC,IAAI,CAAClC,QAAQ,CAACF,IAAI,EAAE;QACrB,IAAI,CAACS,QAAQ,CAACC,OAAO,CAAC+B,IAAI,CAAC,6BAA6B,CAAC;MAC7D,OACK;QACD,IAAI,CAAC,aAAa,CAACC,IAAI,CAAC,IAAI,CAACxC,QAAQ,CAACF,IAAI,CAAC2C,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE;UAC5D,IAAI,CAAClC,QAAQ,CAACC,OAAO,CAAC+B,IAAI,CAAC,iCAAiC,CAAC;QACjE;MACJ;;MAEA;MACA,IAAI,CAAC,IAAI,CAACvC,QAAQ,CAACC,KAAK,EAAE;QACtB,IAAI,CAACM,QAAQ,CAACE,QAAQ,CAAC8B,IAAI,CAAC,mCAAmC,CAAC;MACpE,OAAO;QACH,IAAI,CAAC,IAAI,CAACvC,QAAQ,CAACC,KAAK,CAACyC,UAAU,CAAC,KAAK,CAAC,EAAE;UACxC,IAAI,CAACnC,QAAQ,CAACE,QAAQ,CAAC8B,IAAI,CAAC,mCAAmC,CAAC;QACpE;;QAEA;QACA,MAAMI,UAAS,GAAI,IAAI,CAAC3C,QAAQ,CAACC,KAAK,CAACwC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;QACzD,IAAI,CAAC,aAAa,CAACD,IAAI,CAACG,UAAU,CAAC,EAAE;UACjC,IAAI,CAACpC,QAAQ,CAACE,QAAQ,CAAC8B,IAAI,CAAC,oDAAoD,CAAC;QACrF;QAEA,IAAI,IAAI,CAACvC,QAAQ,CAACC,KAAK,CAACoC,MAAK,KAAM,EAAE,EAAE;UACnC,IAAI,CAAC9B,QAAQ,CAACE,QAAQ,CAAC8B,IAAI,CAAC,gDAAgD,CAAC;QACjF;MACJ;MAEA,IAAI,CAAC,IAAI,CAACvC,QAAQ,CAACE,MAAM,EAAE;QACvB,IAAI,CAACK,QAAQ,CAACG,SAAS,CAAC6B,IAAI,CAAC,uCAAuC,CAAC;MACzE,OACK;QACD,IAAIK,QAAQ,CAAC,IAAI,CAAC5C,QAAQ,CAACE,MAAM,IAAI,GAAG,EAAE;UACtC,IAAI,CAACK,QAAQ,CAACG,SAAS,CAAC6B,IAAI,CAAC,gDAAgD,CAAC;QAClF;QAEA,IAAIK,QAAQ,CAAC,IAAI,CAAC5C,QAAQ,CAACE,MAAM,IAAI,CAAC,EAAE;UACpC,IAAI,CAACK,QAAQ,CAACG,SAAS,CAAC6B,IAAI,CAAC,qDAAqD,CAAC;QACvF;MACJ;MAEA,IAAI,CAAC,IAAI,CAACvC,QAAQ,CAACG,MAAM,EAAE;QACvB,IAAI,CAACI,QAAQ,CAACI,SAAS,CAAC4B,IAAI,CAAC,uCAAuC,CAAC;MACzE,OACK;QACD,IAAIK,QAAQ,CAAC,IAAI,CAAC5C,QAAQ,CAACG,MAAM,IAAI,EAAE,EAAE;UACrC,IAAI,CAACI,QAAQ,CAACI,SAAS,CAAC4B,IAAI,CAAC,4CAA4C,CAAC;QAC9E;QAEA,IAAIK,QAAQ,CAAC,IAAI,CAAC5C,QAAQ,CAACG,MAAM,IAAI,CAAC,EAAE;UACpC,IAAI,CAACI,QAAQ,CAACI,SAAS,CAAC4B,IAAI,CAAC,qDAAqD,CAAC;QACvF;QAEA,IAAIK,QAAQ,CAAC,IAAI,CAAC5C,QAAQ,CAACE,MAAM,IAAI0C,QAAQ,CAAC,IAAI,CAAC5C,QAAQ,CAACG,MAAM,CAAC,EAAE;UACjE,IAAI,CAACI,QAAQ,CAACI,SAAS,CAAC4B,IAAI,CAAC,6DAA6D,CAAC;QAC/F;MACJ;MAEA,IAAI,IAAI,CAACvC,QAAQ,CAACI,IAAI,EAAE;QACpB,IAAI,CAAC,WAAW,CAACoC,IAAI,CAAC,IAAI,CAACxC,QAAQ,CAACI,IAAI,CAAC,EAAE;UACvC,IAAI,CAACG,QAAQ,CAACK,OAAO,CAAC2B,IAAI,CAAC,uCAAuC,CAAC;QACvE;QAEA,IAAI,IAAI,CAACvC,QAAQ,CAACI,IAAI,CAACiC,MAAK,IAAK,EAAE,EAAE;UACjC,IAAI,CAAC9B,QAAQ,CAACK,OAAO,CAAC2B,IAAI,CAAC,yCAAyC,CAAC;QACzE;MACJ;MAEA,IAAI,CAAC,IAAI,CAACvC,QAAQ,CAACK,IAAI,EAAE;QACrB,IAAI,CAACE,QAAQ,CAACM,OAAO,CAAC0B,IAAI,CAAC,oCAAoC,CAAC;MACpE,OACK;QACD,IAAIX,QAAO,GAAIG,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACa,YAAY,CAAC,KAAK,CAAC;QACnE,IAAIf,QAAO,GAAIC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACa,YAAY,CAAC,KAAK,CAAC;QACnE,IAAIC,OAAM,GAAI,IAAI7B,IAAI,CAACW,QAAQ,CAAC;QAChC,IAAImB,OAAM,GAAI,IAAI9B,IAAI,CAACa,QAAQ,CAAC;QAChC,IAAIkB,SAAQ,GAAI,IAAI/B,IAAI,CAAC,IAAI,CAACjB,QAAQ,CAACK,IAAI,CAAC;QAE5C,IAAI2C,SAAQ,KAAM,cAAc,EAAE;UAC9B,IAAI,CAACzC,QAAQ,CAACM,OAAO,CAAC0B,IAAI,CAAC,oBAAoB,CAAC;QACpD;QAEA,IAAIS,SAAS,CAACC,OAAO,CAAC,IAAIH,OAAO,CAACG,OAAO,CAAC,KAAKD,SAAS,CAACC,OAAO,CAAC,IAAIF,OAAO,CAACE,OAAO,CAAC,CAAC,EAAE;UACpF,IAAI,CAAC1C,QAAQ,CAACM,OAAO,CAAC0B,IAAI,CAAC,4DAA4D,CAAC;QAC5F;QAEA,IAAIS,SAAS,CAACvB,QAAQ,CAAC,IAAI,KAAKuB,SAAS,CAACvB,QAAQ,CAAC,IAAI,EAAE,EAAE;UACvD,IAAI,CAAClB,QAAQ,CAACM,OAAO,CAAC0B,IAAI,CAAC,8CAA8C,CAAC;QAC9E;MACJ;IAGJ,CAAC;IAED,MAAMW,YAAYA,CAACC,CAAC,EAAE;MAClB,IAAI,CAACb,SAAS,CAAC,CAAC;MAEhB,IAAI,CAAC,IAAI,CAACH,aAAa,CAAC,CAAC,EAAE;QACvBgB,CAAC,CAACC,cAAc,CAAC,CAAC;MACtB,OAAO;QACHD,CAAC,CAACC,cAAc,CAAC,CAAC;QAElB,IAAIrD,IAAG,GAAI;UACPsD,SAAS,EAAE,IAAI,CAACrD,QAAQ,CAACF,IAAI;UAC7BwD,UAAU,EAAEV,QAAQ,CAAC,IAAI,CAAC5C,QAAQ,CAACC,KAAK,CAAC;UACzCsD,WAAW,EAAEX,QAAQ,CAAC,IAAI,CAAC5C,QAAQ,CAACE,MAAM,CAAC;UAC3CsD,WAAW,EAAEZ,QAAQ,CAAC,IAAI,CAAC5C,QAAQ,CAACG,MAAM,CAAC;UAC3CsD,OAAO,EAAEb,QAAQ,CAAC,IAAI,CAAC5C,QAAQ,CAACI,IAAI,CAAC;UACrCsD,SAAS,EAAE,IAAI,CAAC1D,QAAQ,CAACK,IAAI;UAC7BsD,SAAS,EAAE,IAAI,CAAC3D,QAAQ,CAACM;QAC7B;QAEA,MAAMV,KAAK,CAACgE,IAAI,CAAC,UAAU,EAAE7D,IAAI,CAAC;QAElC,IAAI,CAAC8D,KAAK,CAACC,KAAK,CAACC,SAAS,CAAC,SAAS,EAAE,wDAAwD,EAAE,wBAAwB;QACxHhC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAACgC,KAAK,CAAC,CAAC;MACpD;IACJ;EACJ,CAAC;EAEDC,UAAU,EAAE;IACRpE;EACJ;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}